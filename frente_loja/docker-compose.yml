version: '3'

services:
  nginx:
    build:
      context: "./nginx"
    container_name: nginx-web
    depends_on:
      - clients-web
      #- app  
      - orders-web
      - products-web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/conf:/etc/nginx/conf.d"
      - "./apiorder:/var/www"
      - "./nginx/conf/logs:/var/log/nginx"
      - "./nginx/conf/ssl:/ssl"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
    links:
      - clients-web 
      #- app
      - orders-web
      - products-web
    networks:
     - app-network
  clients-web:
    build:
      context: "./client"
    container_name: clients-web
    ports:
      - "5003:80"
    networks:
      - app-network
  products-web:
    build:
      context: "./apiproducts"
      target: development
    container_name: products-web
    command: npm run start:debug
    ports:
      - "8002:3000"
    #volumes:
      #- "./apiproducts:/usr/src/app"
    restart: unless-stopped
    networks:
      - app-network
  orders-web:
    build: 
      context: "./apiorder" 
    container_name: orders-web 
    ports:
      - 9000:9000
    volumes:
      - "./apiorder:/var/www"
    networks:
      - app-network 
  app:
    build:
      context: "./front"
    container_name: app
    ports:
      - 8001:3000
    #stdin_open: true
    #volumes:
      #- ./front:/usr/src/app
      #- /usr/src/app/node_modules
      #- /usr/src/app/.next
    networks:
      - app-network
    restart: unless-stopped
    
networks: 
  app-network:
    driver: bridge